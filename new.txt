let isDown = false;
    let startX;
    let scrollLeft;
    let currentScrollPosition = 0;
    let scrollAmount = 300;

    const hourList = document.getElementById('hourList');   
    const horizontalScrcoll = document.getElementById('horizontal-scroll');
    const buttonScrollLeft = document.querySelector('.left');
    const buttonScrollRight = document.querySelector('.right');
    
    buttonScrollLeft.style.opacity = '0';
    let maxScroll = - hourList.offsetWidth + horizontalScrcoll.offsetWidth;
    
    const mouseDownHandler = (e) => {
        isDown = true;
        hourList.classList.add('active');
        startX = e.pageX - hourList.offsetLeft;
        scrollLeft = hourList.scrollLeft;
    }

    const mouseLeaveHandler = (e) => {
        isDown = false;
        hourList.classList.remove('active');
    }

    const mouseUpHandler = (e) => {
        isDown = false;
        hourList.classList.remove('active');
    }
    
    const mouseMoveHandler = (e) => {
        hourList.style.scrollBehavior = '';
        if(!isDown) return;
        e.preventDefault();
        const x = e.pageX - hourList.offsetLeft;
        const walk = (x - startX) ;
        hourList.scrollLeft = scrollLeft - walk;
    }

    const buttonClickHandler = (val) => {
        currentScrollPosition += (val * scrollAmount);

        if (currentScrollPosition >= 0) {
            currentScrollPosition = 0;
            buttonScrollLeft.style.opacity = "0";
        } else {
            buttonScrollLeft.style.opacity = "0.3";
        }

        if (currentScrollPosition <= maxScroll) {
            currentScrollPosition = maxScroll;
            buttonScrollRight.style.opacity = "0";
        } else {
            buttonScrollRight.style.opacity = "0.3";
        }
            
        hourList.style.left = currentScrollPosition + 'px';
    }

    useEffect(() => {   
        if (filteredHourly !== null) {
            if (hourList !== null) {
                buttonScrollLeft.addEventListener('click', (e) => {buttonClickHandler(1)});
                buttonScrollRight.addEventListener('click', (e) => {buttonClickHandler(-1)});
                // buttonScrollLeft.addEventListener('click', (e) => {
                //     hourList.style.scrollBehavior = 'smooth';
                //     hourList.scrollLeft = hourList.scrollLeft - 500;
                // }); 

                // buttonScrollRight.addEventListener('click', (e) => {
                //     hourList.style.scrollBehavior = 'smooth';
                //     hourList.scrollLeft = hourList.scrollLeft + 500;
                // });

                
                hourList.addEventListener('mousedown', (e) => {mouseDownHandler(e)});
                hourList.addEventListener('mouseleave', () => {mouseLeaveHandler()});
                hourList.addEventListener('mouseup', () => {mouseUpHandler()});
                hourList.addEventListener('mousemove', (e) => {mouseMoveHandler(e)});
            }
        }
        return() => {
            if (filteredHourly !== null) {
                if (hourList !== null) {
                    buttonScrollLeft.removeEventListener('click', (e) => {buttonClickHandler(1)});
                    buttonScrollRight.removeEventListener('click', (e) => {buttonClickHandler(-1)});
                    hourList.removeEventListener('mousedown', (e) => mouseDownHandler(e));
                    hourList.removeEventListener('mouseleave', (e) => mouseLeaveHandler(e));
                    hourList.removeEventListener('mouseup', (e) => mouseUpHandler(e));
                    hourList.removeEventListener('mousemove', (e) => mouseMoveHandler(e));
                }
            }
        }
    },[]);